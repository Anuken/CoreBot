apply plugin: 'java'
apply plugin: 'maven'

project.ext.mainClassName = "io.anuke.corebot.CoreBot"
sourceCompatibility = 1.8
version = '1.0'

sourceSets.main.java.srcDirs = ["src/"]

allprojects{
    ext{
        arcHash = null
        
        localArc = {
            return new File(projectDir.parent, '../Arc').exists()
        }

        getArcHash = {
            //get latest commit hash from gtihub since JITPack's '-snapshot' version doesn't work correctly
            if(arcHash == null){
                try{
                    arcHash = 'git ls-remote https://github.com/Anuken/Arc.git'.execute().text.split("\t")[0]
                }catch(e){
                    e.printStackTrace()
                    arcHash = "-SNAPSHOT";
                }
            }
            return arcHash
        }

        arcModule = { String name ->
            if(localArc()){
                return project(":Arc:$name")
            }else{
                //skip to last submodule
                if(name.contains(':')) name = name.split(':').last()
                return "com.github.Anuken.Arc:$name:${getArcHash()}"
            }
        }
    }
}

allprojects{
    repositories{
        mavenLocal()
        mavenCentral()
        maven{ url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven{ url "https://oss.sonatype.org/content/repositories/releases/" }
        maven{ url 'https://jitpack.io' }
        jcenter()
    }
}

task run(dependsOn: classes, type: JavaExec) {
    if (project.hasProperty("token")) systemProperty "token", project.getProperty("token")
    main = project.mainClassName
    classpath = sourceSets.main.runtimeClasspath
    standardInput = System.in
    ignoreExitValue = true
}

task dist(type: Jar) {
    from files(sourceSets.main.output.classesDirs)
    from files(sourceSets.main.output.resourcesDir)
    from { configurations.compile.collect { zipTree(it) } }

    manifest {
        attributes 'Main-Class': project.mainClassName
    }
}

project(":Mindustry:core"){
    apply plugin: "java"

    dependencies {
        compile project(":Arc:arc-core")
        compile project(":Arc:extensions:arcnet")
        compile project(":Arc:extensions:freetype")
        compileOnly project(":Mindustry:annotations")
        annotationProcessor project(":Mindustry:annotations")
        compile "org.lz4:lz4-java:1.4.1"
    }
}

project(":Mindustry:annotations"){
    apply plugin: "java"

    task cleanGen{
        doFirst{
            delete{
                delete "../core/src/io/anuke/mindustry/gen/"
            }
        }
    }

    compileJava.dependsOn(cleanGen)

    dependencies {
        compile 'com.squareup:javapoet:1.11.0'
        compile files("${System.getProperty('java.home')}/../lib/tools.jar")
    }
}

dependencies {
    compile 'net.dv8tion:JDA:4.0.0_54'
    compile 'com.squareup.okio:okio:1.11.0'
    compile "org.jsoup:jsoup:1.7.2"
    compile project(":Arc:arc-core")
    compile project(":Mindustry:core")
}
